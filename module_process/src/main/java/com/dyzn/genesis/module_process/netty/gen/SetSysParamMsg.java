package com.dyzn.genesis.module_process.netty.gen;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2020-08-27")
public class SetSysParamMsg implements org.apache.thrift.TBase<SetSysParamMsg, SetSysParamMsg._Fields>, java.io.Serializable, Cloneable, Comparable<SetSysParamMsg> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SetSysParamMsg");

  private static final org.apache.thrift.protocol.TField SYS_PARAM_FIELD_DESC = new org.apache.thrift.protocol.TField("sysParam", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField AXIS_PARAM1_FIELD_DESC = new org.apache.thrift.protocol.TField("axisParam1", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField AXIS_PARAM2_FIELD_DESC = new org.apache.thrift.protocol.TField("axisParam2", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField AXIS_PARAM3_FIELD_DESC = new org.apache.thrift.protocol.TField("axisParam3", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField AXIS_PARAM4_FIELD_DESC = new org.apache.thrift.protocol.TField("axisParam4", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField AXIS_PARAM5_FIELD_DESC = new org.apache.thrift.protocol.TField("axisParam5", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField AXIS_PARAM6_FIELD_DESC = new org.apache.thrift.protocol.TField("axisParam6", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField AXIS_PARAM7_FIELD_DESC = new org.apache.thrift.protocol.TField("axisParam7", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField AXIS_PARAM8_FIELD_DESC = new org.apache.thrift.protocol.TField("axisParam8", org.apache.thrift.protocol.TType.STRING, (short)9);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SetSysParamMsgStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SetSysParamMsgTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable String sysParam; // required
  public @org.apache.thrift.annotation.Nullable String axisParam1; // required
  public @org.apache.thrift.annotation.Nullable String axisParam2; // required
  public @org.apache.thrift.annotation.Nullable String axisParam3; // required
  public @org.apache.thrift.annotation.Nullable String axisParam4; // required
  public @org.apache.thrift.annotation.Nullable String axisParam5; // required
  public @org.apache.thrift.annotation.Nullable String axisParam6; // required
  public @org.apache.thrift.annotation.Nullable String axisParam7; // required
  public @org.apache.thrift.annotation.Nullable String axisParam8; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SYS_PARAM((short)1, "sysParam"),
    AXIS_PARAM1((short)2, "axisParam1"),
    AXIS_PARAM2((short)3, "axisParam2"),
    AXIS_PARAM3((short)4, "axisParam3"),
    AXIS_PARAM4((short)5, "axisParam4"),
    AXIS_PARAM5((short)6, "axisParam5"),
    AXIS_PARAM6((short)7, "axisParam6"),
    AXIS_PARAM7((short)8, "axisParam7"),
    AXIS_PARAM8((short)9, "axisParam8");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SYS_PARAM
          return SYS_PARAM;
        case 2: // AXIS_PARAM1
          return AXIS_PARAM1;
        case 3: // AXIS_PARAM2
          return AXIS_PARAM2;
        case 4: // AXIS_PARAM3
          return AXIS_PARAM3;
        case 5: // AXIS_PARAM4
          return AXIS_PARAM4;
        case 6: // AXIS_PARAM5
          return AXIS_PARAM5;
        case 7: // AXIS_PARAM6
          return AXIS_PARAM6;
        case 8: // AXIS_PARAM7
          return AXIS_PARAM7;
        case 9: // AXIS_PARAM8
          return AXIS_PARAM8;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SYS_PARAM, new org.apache.thrift.meta_data.FieldMetaData("sysParam", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AXIS_PARAM1, new org.apache.thrift.meta_data.FieldMetaData("axisParam1", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AXIS_PARAM2, new org.apache.thrift.meta_data.FieldMetaData("axisParam2", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AXIS_PARAM3, new org.apache.thrift.meta_data.FieldMetaData("axisParam3", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AXIS_PARAM4, new org.apache.thrift.meta_data.FieldMetaData("axisParam4", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AXIS_PARAM5, new org.apache.thrift.meta_data.FieldMetaData("axisParam5", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AXIS_PARAM6, new org.apache.thrift.meta_data.FieldMetaData("axisParam6", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AXIS_PARAM7, new org.apache.thrift.meta_data.FieldMetaData("axisParam7", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AXIS_PARAM8, new org.apache.thrift.meta_data.FieldMetaData("axisParam8", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SetSysParamMsg.class, metaDataMap);
  }

  public SetSysParamMsg() {
  }

  public SetSysParamMsg(
    String sysParam,
    String axisParam1,
    String axisParam2,
    String axisParam3,
    String axisParam4,
    String axisParam5,
    String axisParam6,
    String axisParam7,
    String axisParam8)
  {
    this();
    this.sysParam = sysParam;
    this.axisParam1 = axisParam1;
    this.axisParam2 = axisParam2;
    this.axisParam3 = axisParam3;
    this.axisParam4 = axisParam4;
    this.axisParam5 = axisParam5;
    this.axisParam6 = axisParam6;
    this.axisParam7 = axisParam7;
    this.axisParam8 = axisParam8;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SetSysParamMsg(SetSysParamMsg other) {
    if (other.isSetSysParam()) {
      this.sysParam = other.sysParam;
    }
    if (other.isSetAxisParam1()) {
      this.axisParam1 = other.axisParam1;
    }
    if (other.isSetAxisParam2()) {
      this.axisParam2 = other.axisParam2;
    }
    if (other.isSetAxisParam3()) {
      this.axisParam3 = other.axisParam3;
    }
    if (other.isSetAxisParam4()) {
      this.axisParam4 = other.axisParam4;
    }
    if (other.isSetAxisParam5()) {
      this.axisParam5 = other.axisParam5;
    }
    if (other.isSetAxisParam6()) {
      this.axisParam6 = other.axisParam6;
    }
    if (other.isSetAxisParam7()) {
      this.axisParam7 = other.axisParam7;
    }
    if (other.isSetAxisParam8()) {
      this.axisParam8 = other.axisParam8;
    }
  }

  public SetSysParamMsg deepCopy() {
    return new SetSysParamMsg(this);
  }

  @Override
  public void clear() {
    this.sysParam = null;
    this.axisParam1 = null;
    this.axisParam2 = null;
    this.axisParam3 = null;
    this.axisParam4 = null;
    this.axisParam5 = null;
    this.axisParam6 = null;
    this.axisParam7 = null;
    this.axisParam8 = null;
  }

  @org.apache.thrift.annotation.Nullable
  public String getSysParam() {
    return this.sysParam;
  }

  public SetSysParamMsg setSysParam(@org.apache.thrift.annotation.Nullable String sysParam) {
    this.sysParam = sysParam;
    return this;
  }

  public void unsetSysParam() {
    this.sysParam = null;
  }

  /** Returns true if field sysParam is set (has been assigned a value) and false otherwise */
  public boolean isSetSysParam() {
    return this.sysParam != null;
  }

  public void setSysParamIsSet(boolean value) {
    if (!value) {
      this.sysParam = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public String getAxisParam1() {
    return this.axisParam1;
  }

  public SetSysParamMsg setAxisParam1(@org.apache.thrift.annotation.Nullable String axisParam1) {
    this.axisParam1 = axisParam1;
    return this;
  }

  public void unsetAxisParam1() {
    this.axisParam1 = null;
  }

  /** Returns true if field axisParam1 is set (has been assigned a value) and false otherwise */
  public boolean isSetAxisParam1() {
    return this.axisParam1 != null;
  }

  public void setAxisParam1IsSet(boolean value) {
    if (!value) {
      this.axisParam1 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public String getAxisParam2() {
    return this.axisParam2;
  }

  public SetSysParamMsg setAxisParam2(@org.apache.thrift.annotation.Nullable String axisParam2) {
    this.axisParam2 = axisParam2;
    return this;
  }

  public void unsetAxisParam2() {
    this.axisParam2 = null;
  }

  /** Returns true if field axisParam2 is set (has been assigned a value) and false otherwise */
  public boolean isSetAxisParam2() {
    return this.axisParam2 != null;
  }

  public void setAxisParam2IsSet(boolean value) {
    if (!value) {
      this.axisParam2 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public String getAxisParam3() {
    return this.axisParam3;
  }

  public SetSysParamMsg setAxisParam3(@org.apache.thrift.annotation.Nullable String axisParam3) {
    this.axisParam3 = axisParam3;
    return this;
  }

  public void unsetAxisParam3() {
    this.axisParam3 = null;
  }

  /** Returns true if field axisParam3 is set (has been assigned a value) and false otherwise */
  public boolean isSetAxisParam3() {
    return this.axisParam3 != null;
  }

  public void setAxisParam3IsSet(boolean value) {
    if (!value) {
      this.axisParam3 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public String getAxisParam4() {
    return this.axisParam4;
  }

  public SetSysParamMsg setAxisParam4(@org.apache.thrift.annotation.Nullable String axisParam4) {
    this.axisParam4 = axisParam4;
    return this;
  }

  public void unsetAxisParam4() {
    this.axisParam4 = null;
  }

  /** Returns true if field axisParam4 is set (has been assigned a value) and false otherwise */
  public boolean isSetAxisParam4() {
    return this.axisParam4 != null;
  }

  public void setAxisParam4IsSet(boolean value) {
    if (!value) {
      this.axisParam4 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public String getAxisParam5() {
    return this.axisParam5;
  }

  public SetSysParamMsg setAxisParam5(@org.apache.thrift.annotation.Nullable String axisParam5) {
    this.axisParam5 = axisParam5;
    return this;
  }

  public void unsetAxisParam5() {
    this.axisParam5 = null;
  }

  /** Returns true if field axisParam5 is set (has been assigned a value) and false otherwise */
  public boolean isSetAxisParam5() {
    return this.axisParam5 != null;
  }

  public void setAxisParam5IsSet(boolean value) {
    if (!value) {
      this.axisParam5 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public String getAxisParam6() {
    return this.axisParam6;
  }

  public SetSysParamMsg setAxisParam6(@org.apache.thrift.annotation.Nullable String axisParam6) {
    this.axisParam6 = axisParam6;
    return this;
  }

  public void unsetAxisParam6() {
    this.axisParam6 = null;
  }

  /** Returns true if field axisParam6 is set (has been assigned a value) and false otherwise */
  public boolean isSetAxisParam6() {
    return this.axisParam6 != null;
  }

  public void setAxisParam6IsSet(boolean value) {
    if (!value) {
      this.axisParam6 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public String getAxisParam7() {
    return this.axisParam7;
  }

  public SetSysParamMsg setAxisParam7(@org.apache.thrift.annotation.Nullable String axisParam7) {
    this.axisParam7 = axisParam7;
    return this;
  }

  public void unsetAxisParam7() {
    this.axisParam7 = null;
  }

  /** Returns true if field axisParam7 is set (has been assigned a value) and false otherwise */
  public boolean isSetAxisParam7() {
    return this.axisParam7 != null;
  }

  public void setAxisParam7IsSet(boolean value) {
    if (!value) {
      this.axisParam7 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public String getAxisParam8() {
    return this.axisParam8;
  }

  public SetSysParamMsg setAxisParam8(@org.apache.thrift.annotation.Nullable String axisParam8) {
    this.axisParam8 = axisParam8;
    return this;
  }

  public void unsetAxisParam8() {
    this.axisParam8 = null;
  }

  /** Returns true if field axisParam8 is set (has been assigned a value) and false otherwise */
  public boolean isSetAxisParam8() {
    return this.axisParam8 != null;
  }

  public void setAxisParam8IsSet(boolean value) {
    if (!value) {
      this.axisParam8 = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable Object value) {
    switch (field) {
    case SYS_PARAM:
      if (value == null) {
        unsetSysParam();
      } else {
        setSysParam((String)value);
      }
      break;

    case AXIS_PARAM1:
      if (value == null) {
        unsetAxisParam1();
      } else {
        setAxisParam1((String)value);
      }
      break;

    case AXIS_PARAM2:
      if (value == null) {
        unsetAxisParam2();
      } else {
        setAxisParam2((String)value);
      }
      break;

    case AXIS_PARAM3:
      if (value == null) {
        unsetAxisParam3();
      } else {
        setAxisParam3((String)value);
      }
      break;

    case AXIS_PARAM4:
      if (value == null) {
        unsetAxisParam4();
      } else {
        setAxisParam4((String)value);
      }
      break;

    case AXIS_PARAM5:
      if (value == null) {
        unsetAxisParam5();
      } else {
        setAxisParam5((String)value);
      }
      break;

    case AXIS_PARAM6:
      if (value == null) {
        unsetAxisParam6();
      } else {
        setAxisParam6((String)value);
      }
      break;

    case AXIS_PARAM7:
      if (value == null) {
        unsetAxisParam7();
      } else {
        setAxisParam7((String)value);
      }
      break;

    case AXIS_PARAM8:
      if (value == null) {
        unsetAxisParam8();
      } else {
        setAxisParam8((String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public Object getFieldValue(_Fields field) {
    switch (field) {
    case SYS_PARAM:
      return getSysParam();

    case AXIS_PARAM1:
      return getAxisParam1();

    case AXIS_PARAM2:
      return getAxisParam2();

    case AXIS_PARAM3:
      return getAxisParam3();

    case AXIS_PARAM4:
      return getAxisParam4();

    case AXIS_PARAM5:
      return getAxisParam5();

    case AXIS_PARAM6:
      return getAxisParam6();

    case AXIS_PARAM7:
      return getAxisParam7();

    case AXIS_PARAM8:
      return getAxisParam8();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case SYS_PARAM:
      return isSetSysParam();
    case AXIS_PARAM1:
      return isSetAxisParam1();
    case AXIS_PARAM2:
      return isSetAxisParam2();
    case AXIS_PARAM3:
      return isSetAxisParam3();
    case AXIS_PARAM4:
      return isSetAxisParam4();
    case AXIS_PARAM5:
      return isSetAxisParam5();
    case AXIS_PARAM6:
      return isSetAxisParam6();
    case AXIS_PARAM7:
      return isSetAxisParam7();
    case AXIS_PARAM8:
      return isSetAxisParam8();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof SetSysParamMsg)
      return this.equals((SetSysParamMsg)that);
    return false;
  }

  public boolean equals(SetSysParamMsg that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_sysParam = true && this.isSetSysParam();
    boolean that_present_sysParam = true && that.isSetSysParam();
    if (this_present_sysParam || that_present_sysParam) {
      if (!(this_present_sysParam && that_present_sysParam))
        return false;
      if (!this.sysParam.equals(that.sysParam))
        return false;
    }

    boolean this_present_axisParam1 = true && this.isSetAxisParam1();
    boolean that_present_axisParam1 = true && that.isSetAxisParam1();
    if (this_present_axisParam1 || that_present_axisParam1) {
      if (!(this_present_axisParam1 && that_present_axisParam1))
        return false;
      if (!this.axisParam1.equals(that.axisParam1))
        return false;
    }

    boolean this_present_axisParam2 = true && this.isSetAxisParam2();
    boolean that_present_axisParam2 = true && that.isSetAxisParam2();
    if (this_present_axisParam2 || that_present_axisParam2) {
      if (!(this_present_axisParam2 && that_present_axisParam2))
        return false;
      if (!this.axisParam2.equals(that.axisParam2))
        return false;
    }

    boolean this_present_axisParam3 = true && this.isSetAxisParam3();
    boolean that_present_axisParam3 = true && that.isSetAxisParam3();
    if (this_present_axisParam3 || that_present_axisParam3) {
      if (!(this_present_axisParam3 && that_present_axisParam3))
        return false;
      if (!this.axisParam3.equals(that.axisParam3))
        return false;
    }

    boolean this_present_axisParam4 = true && this.isSetAxisParam4();
    boolean that_present_axisParam4 = true && that.isSetAxisParam4();
    if (this_present_axisParam4 || that_present_axisParam4) {
      if (!(this_present_axisParam4 && that_present_axisParam4))
        return false;
      if (!this.axisParam4.equals(that.axisParam4))
        return false;
    }

    boolean this_present_axisParam5 = true && this.isSetAxisParam5();
    boolean that_present_axisParam5 = true && that.isSetAxisParam5();
    if (this_present_axisParam5 || that_present_axisParam5) {
      if (!(this_present_axisParam5 && that_present_axisParam5))
        return false;
      if (!this.axisParam5.equals(that.axisParam5))
        return false;
    }

    boolean this_present_axisParam6 = true && this.isSetAxisParam6();
    boolean that_present_axisParam6 = true && that.isSetAxisParam6();
    if (this_present_axisParam6 || that_present_axisParam6) {
      if (!(this_present_axisParam6 && that_present_axisParam6))
        return false;
      if (!this.axisParam6.equals(that.axisParam6))
        return false;
    }

    boolean this_present_axisParam7 = true && this.isSetAxisParam7();
    boolean that_present_axisParam7 = true && that.isSetAxisParam7();
    if (this_present_axisParam7 || that_present_axisParam7) {
      if (!(this_present_axisParam7 && that_present_axisParam7))
        return false;
      if (!this.axisParam7.equals(that.axisParam7))
        return false;
    }

    boolean this_present_axisParam8 = true && this.isSetAxisParam8();
    boolean that_present_axisParam8 = true && that.isSetAxisParam8();
    if (this_present_axisParam8 || that_present_axisParam8) {
      if (!(this_present_axisParam8 && that_present_axisParam8))
        return false;
      if (!this.axisParam8.equals(that.axisParam8))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetSysParam()) ? 131071 : 524287);
    if (isSetSysParam())
      hashCode = hashCode * 8191 + sysParam.hashCode();

    hashCode = hashCode * 8191 + ((isSetAxisParam1()) ? 131071 : 524287);
    if (isSetAxisParam1())
      hashCode = hashCode * 8191 + axisParam1.hashCode();

    hashCode = hashCode * 8191 + ((isSetAxisParam2()) ? 131071 : 524287);
    if (isSetAxisParam2())
      hashCode = hashCode * 8191 + axisParam2.hashCode();

    hashCode = hashCode * 8191 + ((isSetAxisParam3()) ? 131071 : 524287);
    if (isSetAxisParam3())
      hashCode = hashCode * 8191 + axisParam3.hashCode();

    hashCode = hashCode * 8191 + ((isSetAxisParam4()) ? 131071 : 524287);
    if (isSetAxisParam4())
      hashCode = hashCode * 8191 + axisParam4.hashCode();

    hashCode = hashCode * 8191 + ((isSetAxisParam5()) ? 131071 : 524287);
    if (isSetAxisParam5())
      hashCode = hashCode * 8191 + axisParam5.hashCode();

    hashCode = hashCode * 8191 + ((isSetAxisParam6()) ? 131071 : 524287);
    if (isSetAxisParam6())
      hashCode = hashCode * 8191 + axisParam6.hashCode();

    hashCode = hashCode * 8191 + ((isSetAxisParam7()) ? 131071 : 524287);
    if (isSetAxisParam7())
      hashCode = hashCode * 8191 + axisParam7.hashCode();

    hashCode = hashCode * 8191 + ((isSetAxisParam8()) ? 131071 : 524287);
    if (isSetAxisParam8())
      hashCode = hashCode * 8191 + axisParam8.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(SetSysParamMsg other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetSysParam()).compareTo(other.isSetSysParam());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSysParam()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sysParam, other.sysParam);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAxisParam1()).compareTo(other.isSetAxisParam1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAxisParam1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.axisParam1, other.axisParam1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAxisParam2()).compareTo(other.isSetAxisParam2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAxisParam2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.axisParam2, other.axisParam2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAxisParam3()).compareTo(other.isSetAxisParam3());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAxisParam3()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.axisParam3, other.axisParam3);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAxisParam4()).compareTo(other.isSetAxisParam4());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAxisParam4()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.axisParam4, other.axisParam4);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAxisParam5()).compareTo(other.isSetAxisParam5());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAxisParam5()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.axisParam5, other.axisParam5);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAxisParam6()).compareTo(other.isSetAxisParam6());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAxisParam6()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.axisParam6, other.axisParam6);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAxisParam7()).compareTo(other.isSetAxisParam7());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAxisParam7()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.axisParam7, other.axisParam7);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAxisParam8()).compareTo(other.isSetAxisParam8());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAxisParam8()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.axisParam8, other.axisParam8);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("SetSysParamMsg(");
    boolean first = true;

    sb.append("sysParam:");
    if (this.sysParam == null) {
      sb.append("null");
    } else {
      sb.append(this.sysParam);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("axisParam1:");
    if (this.axisParam1 == null) {
      sb.append("null");
    } else {
      sb.append(this.axisParam1);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("axisParam2:");
    if (this.axisParam2 == null) {
      sb.append("null");
    } else {
      sb.append(this.axisParam2);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("axisParam3:");
    if (this.axisParam3 == null) {
      sb.append("null");
    } else {
      sb.append(this.axisParam3);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("axisParam4:");
    if (this.axisParam4 == null) {
      sb.append("null");
    } else {
      sb.append(this.axisParam4);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("axisParam5:");
    if (this.axisParam5 == null) {
      sb.append("null");
    } else {
      sb.append(this.axisParam5);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("axisParam6:");
    if (this.axisParam6 == null) {
      sb.append("null");
    } else {
      sb.append(this.axisParam6);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("axisParam7:");
    if (this.axisParam7 == null) {
      sb.append("null");
    } else {
      sb.append(this.axisParam7);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("axisParam8:");
    if (this.axisParam8 == null) {
      sb.append("null");
    } else {
      sb.append(this.axisParam8);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SetSysParamMsgStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SetSysParamMsgStandardScheme getScheme() {
      return new SetSysParamMsgStandardScheme();
    }
  }

  private static class SetSysParamMsgStandardScheme extends org.apache.thrift.scheme.StandardScheme<SetSysParamMsg> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SetSysParamMsg struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SYS_PARAM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.sysParam = iprot.readString();
              struct.setSysParamIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // AXIS_PARAM1
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.axisParam1 = iprot.readString();
              struct.setAxisParam1IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // AXIS_PARAM2
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.axisParam2 = iprot.readString();
              struct.setAxisParam2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // AXIS_PARAM3
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.axisParam3 = iprot.readString();
              struct.setAxisParam3IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // AXIS_PARAM4
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.axisParam4 = iprot.readString();
              struct.setAxisParam4IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // AXIS_PARAM5
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.axisParam5 = iprot.readString();
              struct.setAxisParam5IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // AXIS_PARAM6
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.axisParam6 = iprot.readString();
              struct.setAxisParam6IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // AXIS_PARAM7
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.axisParam7 = iprot.readString();
              struct.setAxisParam7IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // AXIS_PARAM8
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.axisParam8 = iprot.readString();
              struct.setAxisParam8IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SetSysParamMsg struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.sysParam != null) {
        oprot.writeFieldBegin(SYS_PARAM_FIELD_DESC);
        oprot.writeString(struct.sysParam);
        oprot.writeFieldEnd();
      }
      if (struct.axisParam1 != null) {
        oprot.writeFieldBegin(AXIS_PARAM1_FIELD_DESC);
        oprot.writeString(struct.axisParam1);
        oprot.writeFieldEnd();
      }
      if (struct.axisParam2 != null) {
        oprot.writeFieldBegin(AXIS_PARAM2_FIELD_DESC);
        oprot.writeString(struct.axisParam2);
        oprot.writeFieldEnd();
      }
      if (struct.axisParam3 != null) {
        oprot.writeFieldBegin(AXIS_PARAM3_FIELD_DESC);
        oprot.writeString(struct.axisParam3);
        oprot.writeFieldEnd();
      }
      if (struct.axisParam4 != null) {
        oprot.writeFieldBegin(AXIS_PARAM4_FIELD_DESC);
        oprot.writeString(struct.axisParam4);
        oprot.writeFieldEnd();
      }
      if (struct.axisParam5 != null) {
        oprot.writeFieldBegin(AXIS_PARAM5_FIELD_DESC);
        oprot.writeString(struct.axisParam5);
        oprot.writeFieldEnd();
      }
      if (struct.axisParam6 != null) {
        oprot.writeFieldBegin(AXIS_PARAM6_FIELD_DESC);
        oprot.writeString(struct.axisParam6);
        oprot.writeFieldEnd();
      }
      if (struct.axisParam7 != null) {
        oprot.writeFieldBegin(AXIS_PARAM7_FIELD_DESC);
        oprot.writeString(struct.axisParam7);
        oprot.writeFieldEnd();
      }
      if (struct.axisParam8 != null) {
        oprot.writeFieldBegin(AXIS_PARAM8_FIELD_DESC);
        oprot.writeString(struct.axisParam8);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SetSysParamMsgTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SetSysParamMsgTupleScheme getScheme() {
      return new SetSysParamMsgTupleScheme();
    }
  }

  private static class SetSysParamMsgTupleScheme extends org.apache.thrift.scheme.TupleScheme<SetSysParamMsg> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SetSysParamMsg struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetSysParam()) {
        optionals.set(0);
      }
      if (struct.isSetAxisParam1()) {
        optionals.set(1);
      }
      if (struct.isSetAxisParam2()) {
        optionals.set(2);
      }
      if (struct.isSetAxisParam3()) {
        optionals.set(3);
      }
      if (struct.isSetAxisParam4()) {
        optionals.set(4);
      }
      if (struct.isSetAxisParam5()) {
        optionals.set(5);
      }
      if (struct.isSetAxisParam6()) {
        optionals.set(6);
      }
      if (struct.isSetAxisParam7()) {
        optionals.set(7);
      }
      if (struct.isSetAxisParam8()) {
        optionals.set(8);
      }
      oprot.writeBitSet(optionals, 9);
      if (struct.isSetSysParam()) {
        oprot.writeString(struct.sysParam);
      }
      if (struct.isSetAxisParam1()) {
        oprot.writeString(struct.axisParam1);
      }
      if (struct.isSetAxisParam2()) {
        oprot.writeString(struct.axisParam2);
      }
      if (struct.isSetAxisParam3()) {
        oprot.writeString(struct.axisParam3);
      }
      if (struct.isSetAxisParam4()) {
        oprot.writeString(struct.axisParam4);
      }
      if (struct.isSetAxisParam5()) {
        oprot.writeString(struct.axisParam5);
      }
      if (struct.isSetAxisParam6()) {
        oprot.writeString(struct.axisParam6);
      }
      if (struct.isSetAxisParam7()) {
        oprot.writeString(struct.axisParam7);
      }
      if (struct.isSetAxisParam8()) {
        oprot.writeString(struct.axisParam8);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SetSysParamMsg struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(9);
      if (incoming.get(0)) {
        struct.sysParam = iprot.readString();
        struct.setSysParamIsSet(true);
      }
      if (incoming.get(1)) {
        struct.axisParam1 = iprot.readString();
        struct.setAxisParam1IsSet(true);
      }
      if (incoming.get(2)) {
        struct.axisParam2 = iprot.readString();
        struct.setAxisParam2IsSet(true);
      }
      if (incoming.get(3)) {
        struct.axisParam3 = iprot.readString();
        struct.setAxisParam3IsSet(true);
      }
      if (incoming.get(4)) {
        struct.axisParam4 = iprot.readString();
        struct.setAxisParam4IsSet(true);
      }
      if (incoming.get(5)) {
        struct.axisParam5 = iprot.readString();
        struct.setAxisParam5IsSet(true);
      }
      if (incoming.get(6)) {
        struct.axisParam6 = iprot.readString();
        struct.setAxisParam6IsSet(true);
      }
      if (incoming.get(7)) {
        struct.axisParam7 = iprot.readString();
        struct.setAxisParam7IsSet(true);
      }
      if (incoming.get(8)) {
        struct.axisParam8 = iprot.readString();
        struct.setAxisParam8IsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

