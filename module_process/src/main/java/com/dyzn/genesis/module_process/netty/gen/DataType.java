package com.dyzn.genesis.module_process.netty.gen;


@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2020-08-27")
public enum DataType implements org.apache.thrift.TEnum {
  BindCmd(0),
  SetAutoCmd(1),
  ChooseModelCmd(2),
  SetOriginCmd(3),
  ResetCmd(4),
  ReturnOriginCmd(5),
  ClampOrReleaseCmd(6),
  SetMpgCmd(7),
  OpenOrCloseCamCmd(8),
  RunOrStopCmd(9),
  SetZeroCorrectCmd(10),
  SetSysParamCmd(11),
  mpgCmd(12),
  ProgressCmd(13),
  MainAxisTempCmd(14),
  HullTempCmd(15),
  EstopCmd(16),
  HardLimitStatusCmd(17),
  HullErrorCmd(18),
  KnifeErrorCmd(19),
  ErrorCmd(20),
  LoginCmd(21),
  LogoutCmd(22),
  OnlineStatusCmd(23),
  QueryStatusCmd(24),
  DownChangeToolCmd(25),
  PingCmd(26),
  SetActualCoordCmd(27),
  SetFeedRateCmd(28),
  QueryTimeCmd(29),
  CamPicCmd(30),
  CloseHostComputerCmd(31),
  AutoRunNextStepCmd(32);

  private final int value;

  private DataType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  @org.apache.thrift.annotation.Nullable
  public static DataType findByValue(int value) {
    switch (value) {
      case 0:
        return BindCmd;
      case 1:
        return SetAutoCmd;
      case 2:
        return ChooseModelCmd;
      case 3:
        return SetOriginCmd;
      case 4:
        return ResetCmd;
      case 5:
        return ReturnOriginCmd;
      case 6:
        return ClampOrReleaseCmd;
      case 7:
        return SetMpgCmd;
      case 8:
        return OpenOrCloseCamCmd;
      case 9:
        return RunOrStopCmd;
      case 10:
        return SetZeroCorrectCmd;
      case 11:
        return SetSysParamCmd;
      case 12:
        return mpgCmd;
      case 13:
        return ProgressCmd;
      case 14:
        return MainAxisTempCmd;
      case 15:
        return HullTempCmd;
      case 16:
        return EstopCmd;
      case 17:
        return HardLimitStatusCmd;
      case 18:
        return HullErrorCmd;
      case 19:
        return KnifeErrorCmd;
      case 20:
        return ErrorCmd;
      case 21:
        return LoginCmd;
      case 22:
        return LogoutCmd;
      case 23:
        return OnlineStatusCmd;
      case 24:
        return QueryStatusCmd;
      case 25:
        return DownChangeToolCmd;
      case 26:
        return PingCmd;
      case 27:
        return SetActualCoordCmd;
      case 28:
        return SetFeedRateCmd;
      case 29:
        return QueryTimeCmd;
      case 30:
        return CamPicCmd;
      case 31:
        return CloseHostComputerCmd;
      case 32:
        return AutoRunNextStepCmd;
      default:
        return null;
    }
  }
}
